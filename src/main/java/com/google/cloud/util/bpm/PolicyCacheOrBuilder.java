/* Copyright 2019 Google LLC. All Rights Reserved.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/policycache.proto

package com.google.cloud.util.bpm;

public interface PolicyCacheOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.protobuf.util.PolicyCache)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int64 timestamp = 1;</code>
   */
  long getTimestamp();

  /**
   * <code>map&lt;string, .google.protobuf.util.PolicyCache.Hash&gt; bucket = 2;</code>
   */
  int getBucketCount();
  /**
   * <code>map&lt;string, .google.protobuf.util.PolicyCache.Hash&gt; bucket = 2;</code>
   */
  boolean containsBucket(
      java.lang.String key);
  /**
   * Use {@link #getBucketMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.cloud.util.bpm.PolicyCache.Hash>
  getBucket();
  /**
   * <code>map&lt;string, .google.protobuf.util.PolicyCache.Hash&gt; bucket = 2;</code>
   */
  java.util.Map<java.lang.String, com.google.cloud.util.bpm.PolicyCache.Hash>
  getBucketMap();
  /**
   * <code>map&lt;string, .google.protobuf.util.PolicyCache.Hash&gt; bucket = 2;</code>
   */

  com.google.cloud.util.bpm.PolicyCache.Hash getBucketOrDefault(
      java.lang.String key,
      com.google.cloud.util.bpm.PolicyCache.Hash defaultValue);
  /**
   * <code>map&lt;string, .google.protobuf.util.PolicyCache.Hash&gt; bucket = 2;</code>
   */

  com.google.cloud.util.bpm.PolicyCache.Hash getBucketOrThrow(
      java.lang.String key);
}
